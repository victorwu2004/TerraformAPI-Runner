name: Terraform CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch to run on'
        required: true
        default: 'main'
      message:
        description: 'A custom message'
        required: false
        type: string

jobs:
  Terraform_Plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Print event name and inputs
        run: |
          echo "Workflow triggered by ${{ github.event_name }}"
          echo "Branch: ${{ github.event.inputs.branch_name }}"
          echo "Message: ${{ github.event.inputs.message }}"
      - uses: hashicorp/setup-terraform@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
         
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        run: terraform plan -out=plan.tfout
      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: plan.tfout
  plan_pull_request:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: Terraform_Plan
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        run: terraform plan -out=plan.tfout
      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: plan.tfout

  apply_push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: plan_pull_request  # Optional if separating workflows
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tf-plan
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply plan.tfout